<data-definition>
    <enum-type type-name='ui_sidebar_mode'>
        <enum-item name='Default'/>
        <enum-item name='Squads'/>

        -- 2

        <enum-item name='DesignateMine'/>
        <enum-item name='DesignateRemoveRamps'/>
        <enum-item name='DesignateUpStair'/>
        <enum-item name='DesignateDownStair'/>
        <enum-item name='DesignateUpDownStair'/>
        <enum-item name='DesignateUpRamp'/>
        <enum-item name='DesignateChannel'/>
        <enum-item name='DesignateGatherPlants'/>
        <enum-item name='DesignateRemoveDesignation'/>
        <enum-item name='DesignateSmooth'/>
        <enum-item name='DesignateEngrave'/>
        <enum-item name='DesignateCarveFortification'/>

        -- 14

        <enum-item name='Stockpiles'/>
        <enum-item name='Build'/>
        <enum-item name='QueryBuilding'/>

        -- 17

        <enum-item name='Orders'/>
        <enum-item name='OrdersForbid'/>
        <enum-item name='OrdersRefuse'/>
        <enum-item name='OrdersWorkshop'/>
        <enum-item name='OrdersZone'/>

        -- 22

        <enum-item name='BuildingItems'/>
        <enum-item name='ViewUnits'/>
        <enum-item name='LookAround'/>

        -- 25

        <enum-item name='DesignateItemsClaim'/>
        <enum-item name='DesignateItemsForbid'/>
        <enum-item name='DesignateItemsMelt'/>
        <enum-item name='DesignateItemsUnmelt'/>
        <enum-item name='DesignateItemsDump'/>
        <enum-item name='DesignateItemsUndump'/>
        <enum-item name='DesignateItemsHide'/>
        <enum-item name='DesignateItemsUnhide'/>

        -- 33

        <enum-item name='DesignateChopTrees'/>
        <enum-item name='DesignateToggleEngravings'/>

        -- 35

        <enum-item name='Hotkeys'/>
        <enum-item name='Visualize'/>

        -- 37

        <enum-item name='DesignateTrafficHigh'/>
        <enum-item name='DesignateTrafficNormal'/>
        <enum-item name='DesignateTrafficLow'/>
        <enum-item name='DesignateTrafficRestricted'/>

        -- 41

        <enum-item name='Zones'/>
        <enum-item name='ZonesPitInfo'/>

        -- 43

        <enum-item name='DesignateRemoveConstruction'/>

        <enum-item name='DepotAccess'/>
        <enum-item name='Notes'/>
    </enum-type>

    <struct-type type-name='ui_note'>
        <uint8_t name='tile'/>
        <int16_t name='fg_color'/>
        <int16_t name='bg_color'/>
        <stl-string name='name'/>
        <compound name='pos' type-name='coord'/>
    </struct-type>

    <struct-type type-name='ui_hotkey'>
        <stl-string name='name'/>
        <enum base-type='int16_t' name='cmd'>
            <enum-item name='None' value='-1'/>
            <enum-item name='Zoom'/>
        </enum>
        <int32_t name='x'/>
        <int32_t name='y'/>
        <int32_t name='z'/>
    </struct-type>

    <struct-type type-name='ui'>
        <int16_t name='gameover_type'/>
        <int32_t name='gameover_sieger' ref-target='historical_entity'/>
        <compound name='tax_collection'>
            <int16_t name='state'/>
            <int32_t/>
            <stl-vector name='rooms'>
                <pointer type-name='building'/>
            </stl-vector>
            <int32_t/>
            <int32_t comment='probably for tax collector'/>
            <int32_t comment='probably for guard1'/>
            <int32_t comment='probably for guard2'/>
            <int16_t name='collected'/>
            <int16_t name='quota'/>
            <compound type-name='coord' name='collector_pos'/>
            <static-array type-name='int16_t' count='2' name='guard_pos_x'/>
            <static-array type-name='int16_t' count='2' name='guard_pos_y'/>
            <static-array type-name='int16_t' count='2' name='guard_pos_z'/>
            <pointer type-name='unit' name='collector'/>
            <pointer type-name='unit' name='guard1'/>
            <pointer type-name='unit' name='guard2'/>
            <int8_t/>
        </compound>
        <stl-vector name='caravans'>
            <pointer type-name='caravan_state'/>
        </stl-vector>
        <int8_t/>
        <int16_t name='fortress_rank'/>
        <int16_t name='progress_population'/>
        <int16_t name='progress_trade'/>
        <int16_t name='progress_production'/>
        <bool name='king_arrived'/>
        <bool name='king_hasty'/>
        <bool name='economy_active'/>
        <bool name='skip_job_satisfaction_check'/>
        <bool name='justice_active'/>
        <int16_t/>
        <int16_t/>
        <int16_t/>
        <compound name='incoming_king'>
            <int32_t name='desired_architecture'/>
            <int32_t name='desired_roads'/>
            <int32_t name='desired_offerings'/>
        </compound>
        <static-array name='nobles_enabled' type-name='int16_t' count='114' index-enum='profession'/>
        <static-array name='nobles_arrived' type-name='int16_t' count='114' index-enum='profession'/>
        <static-array name='units_killed' type-name='int16_t' count='114' index-enum='profession'/>
        <static-array name='guild_wages' type-name='int32_t' count='6' index-enum='guild_id'/>
        <static-array name='guild_happiness' type-name='int16_t' count='6' index-enum='guild_id'/>
        <static-array name='labor_slowdown_timer' type-name='int16_t' count='6' index-enum='guild_id'/>
        <stl-vector name='currency_value' type-name='int32_t' index-refers-to='$global.world.raws.matgloss.metal[$]'/>
        <int32_t name='trees_removed'/>
        <int32_t/>
        <int32_t name='fortress_age'/>

        <compound type-name='entity_activity_statistics' name='tasks'/>

        <stl-vector type-name='pointer'/>
        <stl-vector name='activities'>
            <pointer type-name='activity_info'/>
        </stl-vector>

        <stl-vector name='dip_meeting_info'>
            <pointer type-name='meeting_diplomat_info'/>
        </stl-vector>

        <stl-vector name='royal_guards'><int32_t ref-target='unit'/></stl-vector>
        <stl-vector name='fortress_guards'><int32_t ref-target='unit'/></stl-vector>
        <stl-vector name='aid_requesters'><int32_t ref-target='unit'/></stl-vector>
        <int8_t name='game_over'/>

        <compound name='siege'>
            <int32_t name='attacker' ref-target='historical_entity'/>
            <int32_t name='active_size1'/>
            <int32_t name='active_size2'/>
            <int32_t name='size'/>
            <int32_t name='timeout'/>
            <bitfield base-type='uint16_t' name='flags'>
                <flag-bit name='active'/>
                <flag-bit name='siege'/>
                <flag-bit name='history'/>
            </bitfield>
        </compound>

        <stl-vector name='crimes' pointer-type='crime_info'/>

        <stl-vector name='punishments' pointer-type='punishment_info'/>

        <stl-vector name='pet_info'>
            <pointer type-name='pet_info'/>
        </stl-vector>
        <stl-vector name='parties'>
            <pointer type-name='party_info'/>
        </stl-vector>
        <stl-vector name='room_rent'>
            <pointer type-name='room_rent_info'/>
        </stl-vector>

        <stl-vector name='dipscripts'>
            <pointer type-name='dipscript_info'/>
        </stl-vector>

        <stl-vector name='dipscript_popups'>
            <pointer type-name='dipscript_popup'/>
        </stl-vector>

        <compound name='kitchen'>
            <stl-vector name='item_types'>
                <enum base-type='int32_t' type-name='item_type'/>
            </stl-vector>
            <stl-vector name='item_subtypes'>
                <int32_t refers-to='(item-subtype-target $$._parent._parent.item_type[$$._key] $)'/>
            </stl-vector>
            <stl-vector name='materials' comment='for certain item types, these are creature/plant IDs'>
                <enum base-type='int32_t' type-name='material_type'/>
            </stl-vector>
            <stl-vector name='matglosses'>
                <int32_t refers-to='(matgloss-target $$._parent._parent.material[$$._key] $)'/>
            </stl-vector>
            <stl-vector name='exc_types' type-name='int8_t'/>
        </compound>
        <stl-vector name='economic_stone' type-name='bool' index-refers-to='$global.world.raws.matgloss.stone[$]'/>
        <int32_t/>
        <int16_t/>
        <int16_t name='mood_cooldown'/>
        <int32_t name='civ_id' ref-target='historical_entity'/>
        <int32_t name='site_id' ref-target='world_site'/>
        <int32_t name='group_id' ref-target='historical_entity'/>
        <int16_t name='race_id' ref-target='creature_raw'/>

        <stl-vector name='farm_crops' type-name='int16_t' ref-target='matgloss_plant'/>
        <stl-vector name='farm_seasons' type-name='int8_t'/>

        <compound name='economy_prices'>
            <compound name='price_adjustment'>
                <stl-vector type-name='int32_t' name='general_items' index-enum='item_type'/>
                <stl-vector type-name='int32_t' name='weapons' index-refers-to='$global.world.raws.itemdefs.weapons[$]'/>
                <stl-vector type-name='int32_t' name='armor' index-refers-to='$global.world.raws.itemdefs.armor[$]'/>
                <stl-vector type-name='int32_t' name='handwear' index-refers-to='$global.world.raws.itemdefs.helms[$]'/>
                <stl-vector type-name='int32_t' name='footwear' index-refers-to='$global.world.raws.itemdefs.shoes[$]'/>
                <stl-vector type-name='int32_t' name='headgear' index-refers-to='$global.world.raws.itemdefs.gloves[$]'/>
                <stl-vector type-name='int32_t' name='legwear' index-refers-to='$global.world.raws.itemdefs.pants[$]'/>
                <stl-vector type-name='int32_t' name='prepared_food' index-refers-to='$global.world.raws.itemdefs.food[$]'/>
                <stl-vector type-name='int32_t' name='potions'/>
                <stl-vector type-name='int32_t' name='materials' index-enum='material_type'/>
                <stl-vector type-name='int32_t' name='wood' index-refers-to='$global.world.raws.matgloss.wood[$]'/>
                <stl-vector type-name='int32_t' name='cloth' index-refers-to='$global.world.raws.matgloss.plant[$]'/>
                <stl-vector type-name='int32_t' name='bone' index-refers-to='$global.world.raws.creatures[$]'/>
                <stl-vector type-name='int32_t' name='ivory' index-refers-to='$global.world.raws.creatures[$]'/>
                <stl-vector type-name='int32_t' name='horn' index-refers-to='$global.world.raws.creatures[$]'/>
                <stl-vector type-name='int32_t' name='pearl' index-refers-to='$global.world.raws.creatures[$]'/>
                <stl-vector type-name='int32_t' name='shell' index-refers-to='$global.world.raws.creatures[$]'/>
                <stl-vector type-name='int32_t' name='leather' index-refers-to='$global.world.raws.creatures[$]'/>
                <stl-vector type-name='int32_t' name='silk' index-refers-to='$global.world.raws.creatures[$]'/>
                <stl-vector type-name='int32_t' name='stone_gems' index-refers-to='$global.world.raws.matgloss.stone[$]'/>
                <stl-vector type-name='int32_t' name='meat_fish' index-refers-to='$global.world.raws.creatures[$]'/>
                <stl-vector type-name='int32_t' name='plants' index-refers-to='$global.world.raws.matgloss.plant[$]'/>
                <stl-vector type-name='int32_t' name='drinks' index-refers-to='$global.world.raws.matgloss.plant[$]'/>
                <stl-vector type-name='int32_t' name='extract_animal' index-refers-to='$global.world.raws.creatures[$]'/>
                <stl-vector type-name='int32_t' name='extract_plant' index-refers-to='$global.world.raws.matgloss.plant[$]'/>
                <stl-vector type-name='int32_t' name='mill_animal' index-refers-to='$global.world.raws.creatures[$]'/>
                <stl-vector type-name='int32_t' name='mill_plant' index-refers-to='$global.world.raws.matgloss.plant[$]'/>
                <stl-vector type-name='int32_t' name='cheese_animal' index-refers-to='$global.world.raws.creatures[$]'/>
                <stl-vector type-name='int32_t' name='cheese_plant' index-refers-to='$global.world.raws.matgloss.plant[$]'/>
                <stl-vector type-name='int32_t' name='pets' index-refers-to='$global.world.raws.creatures[$]'/>
            </compound>
            <compound name='price_setter'>
                <stl-vector name='general_items' index-enum='item_type'><pointer type-name='unit'/></stl-vector>
                <stl-vector name='weapons' index-refers-to='$global.world.raws.itemdefs.weapons[$]'><pointer type-name='unit'/></stl-vector>
                <stl-vector name='armor' index-refers-to='$global.world.raws.itemdefs.armor[$]'><pointer type-name='unit'/></stl-vector>
                <stl-vector name='handwear' index-refers-to='$global.world.raws.itemdefs.helms[$]'><pointer type-name='unit'/></stl-vector>
                <stl-vector name='footwear' index-refers-to='$global.world.raws.itemdefs.shoes[$]'><pointer type-name='unit'/></stl-vector>
                <stl-vector name='headgear' index-refers-to='$global.world.raws.itemdefs.gloves[$]'><pointer type-name='unit'/></stl-vector>
                <stl-vector name='legwear' index-refers-to='$global.world.raws.itemdefs.pants[$]'><pointer type-name='unit'/></stl-vector>
                <stl-vector name='prepared_food' index-refers-to='$global.world.raws.itemdefs.food[$]'><pointer type-name='unit'/></stl-vector>
                <stl-vector name='potions'><pointer type-name='unit'/></stl-vector>
                <stl-vector name='materials' index-enum='material_type'><pointer type-name='unit'/></stl-vector>
                <stl-vector name='wood' index-refers-to='$global.world.raws.matgloss.wood[$]'><pointer type-name='unit'/></stl-vector>
                <stl-vector name='cloth' index-refers-to='$global.world.raws.matgloss.plant[$]'><pointer type-name='unit'/></stl-vector>
                <stl-vector name='bone' index-refers-to='$global.world.raws.creatures[$]'><pointer type-name='unit'/></stl-vector>
                <stl-vector name='ivory' index-refers-to='$global.world.raws.creatures[$]'><pointer type-name='unit'/></stl-vector>
                <stl-vector name='horn' index-refers-to='$global.world.raws.creatures[$]'><pointer type-name='unit'/></stl-vector>
                <stl-vector name='pearl' index-refers-to='$global.world.raws.creatures[$]'><pointer type-name='unit'/></stl-vector>
                <stl-vector name='shell' index-refers-to='$global.world.raws.creatures[$]'><pointer type-name='unit'/></stl-vector>
                <stl-vector name='leather' index-refers-to='$global.world.raws.creatures[$]'><pointer type-name='unit'/></stl-vector>
                <stl-vector name='silk' index-refers-to='$global.world.raws.creatures[$]'><pointer type-name='unit'/></stl-vector>
                <stl-vector name='stone_gems' index-refers-to='$global.world.raws.matgloss.stone[$]'><pointer type-name='unit'/></stl-vector>
                <stl-vector name='meat_fish' index-refers-to='$global.world.raws.creatures[$]'><pointer type-name='unit'/></stl-vector>
                <stl-vector name='plants' index-refers-to='$global.world.raws.matgloss_plant[$]'><pointer type-name='unit'/></stl-vector>
                <stl-vector name='drinks' index-refers-to='$global.world.raws.matgloss_plant[$]'><pointer type-name='unit'/></stl-vector>
                <stl-vector name='extract_animal' index-refers-to='$global.world.raws.creatures[$]'><pointer type-name='unit'/></stl-vector>
                <stl-vector name='extract_plant' index-refers-to='$global.world.raws.matgloss.plant[$]'><pointer type-name='unit'/></stl-vector>
                <stl-vector name='mill_animal' index-refers-to='$global.world.raws.creatures[$]'><pointer type-name='unit'/></stl-vector>
                <stl-vector name='mill_plant' index-refers-to='$global.world.raws.matgloss.plant[$]'><pointer type-name='unit'/></stl-vector>
                <stl-vector name='cheese_animal' index-refers-to='$global.world.raws.creatures[$]'><pointer type-name='unit'/></stl-vector>
                <stl-vector name='cheese_plant' index-refers-to='$global.world.raws.matgloss.plant[$]'><pointer type-name='unit'/></stl-vector>
                <stl-vector name='pets' index-refers-to='$global.world.raws.creatures[$]'><pointer type-name='unit'/></stl-vector>
            </compound>
        </compound>

        <compound name='stockpile'>
            <int32_t name='reserved_bins'/>
            <int32_t name='reserved_barrels'/>

            <compound name='custom_settings' type-name='stockpile_settings'/>
        </compound>

        <static-array count='4'>
            <static-array count='768'>
                <int16_t name='unk1'/>
                <int16_t name='unk2'/>
            </static-array>
        </static-array>

        <stl-vector name='unk_mapedge_x' type-name='int16_t'/>
        <stl-vector name='unk_mapedge_y' type-name='int16_t'/>
        <stl-vector name='unk_mapedge_z' type-name='int16_t'/>

        <compound name='map_edge'>
            <stl-vector name='surface_x' type-name='int16_t'/>
            <stl-vector name='surface_y' type-name='int16_t'/>
            <stl-vector name='surface_z' type-name='int16_t'/>
        </compound>

        <stl-vector type-name='int16_t'/>
        <stl-vector type-name='int16_t'/>
        <stl-vector type-name='int16_t'/>
        <stl-vector type-name='int32_t'/>
        <stl-vector type-name='int16_t'/>
        <stl-vector type-name='int16_t'/>
        <int32_t name='mayor_nemesis' ref-target='nemesis_record'/>
        <int32_t name='manager_nemesis' ref-target='nemesis_record'/>
        <int32_t name='bookkeeper_nemesis' ref-target='nemesis_record'/>
        <int32_t name='broker_nemesis' ref-target='nemesis_record'/>
        <int32_t name='sheriff_nemesis' ref-target='nemesis_record'/>
        <int32_t name='noble_flags' comment='0x1 = need Manager; 0x2 = have Mayor'/>
        <int32_t name='manager_timer'/>
        <int32_t name='bookkeeper_timer'/>
        <int32_t name='bookkeeper_precision_reached'/>
        <int16_t name='bookkeeper_accuracy_level'/>

        <compound name='notes'>
            <stl-vector name='list' pointer-type='ui_note'/>
            <int16_t name='sym_selector'/>
            <int32_t name='cur_note_index'/>
            <bool name='in_edit_name_mode'/>
            <uint8_t name='sym_tile'/>
            <int16_t name='sym_fg_color'/>
            <int16_t name='sym_bg_color'/>
            <stl-vector>
                <pointer type-name='stl-string'/>
            </stl-vector>
        </compound>

        <compound name='main'>
            <static-array name='hotkeys' type-name='ui_hotkey' count='16'/>

            <int32_t name='traffic_cost_high'/>
            <int32_t name='traffic_cost_normal'/>
            <int32_t name='traffic_cost_low'/>
            <int32_t name='traffic_cost_restricted'/>

            <pointer name='fortress_entity' type-name='historical_entity'
                     comment='entity pointed to by group_id'/>

            <enum base-type='int16_t' name='mode' type-name='ui_sidebar_mode'/>

            <int16_t name='unk1'/>

            <int16_t name='selected_traffic_cost'
                     comment='For changing the above costs.'/>

            <bool name='autosave_request'/>
            <bool/>
            <int32_t/>

            <int16_t name='selected_hotkey'/>
            <bool name='in_rename_hotkey'/>
        </compound>

    </struct-type>

    <enum-type type-name='timed_event_type' base-type='int16_t'>
        <enum-item name='Caravan'/>
        <enum-item name='Migrants'/>
        <enum-item name='Diplomat'/>
        <enum-item name='CivAttack'/>
        <enum-item name='FeatureAttack'/>
        <enum-item name='Megabeast'/>
        <enum-item name='CuriousBeasts'/>
    </enum-type>

    <struct-type type-name='timed_event'>
        <enum type-name='timed_event_type' name='type'/>
        <int8_t name='season'/>
        <int16_t name='season_ticks' comment='1 tick = 10 frames; 0 = end of season'/>
        <pointer name='entity' type-name='historical_entity'/>
        <int16_t name='feature_idx'/>
        <int16_t name='feature_x'/>
        <int16_t name='feature_y'/>
    </struct-type>

    <struct-type type-name='map_renderer'>
        <static-array name='entity' count='200'>
            <static-array count='200' type-name='uint8_t' comment='|=1 building, |=2 ramp/stair'/>
        </static-array>
        <stl-vector name='cursor_units' pointer-type='unit'/>
        <pointer name='cursor_guts' type-name='unit'/>
        <bool name='multiple_guts'/>
        <pointer name='cursor_corpse' type-name='item'/>
        <int32_t name='cursor_corpse_cnt'/>
        <pointer name='cursor_corpsepiece' type-name='item'/>
        <int32_t name='cursor_corpsepiece_cnt'/>
        <pointer name='cursor_bones' type-name='item'/>
        <int32_t name='cursor_bones_cnt'/>
        <pointer name='cursor_skulls' type-name='item'/>
        <int32_t name='cursor_skulls_cnt'/>
        <pointer name='cursor_other' type-name='item'/>
        <int32_t name='cursor_other_cnt'/>
        <int8_t name='allow_rotate'/>
        <int8_t name='rotate_mode'/>
        <int32_t name='cur_tick_count' comment='GetTickCount'/>
        <int16_t name='tick_phase' comment='cur_year_tick%10080'/>
        <int8_t name='dim_colors'/>
    </struct-type>
</data-definition>

<!--
Local Variables:
indent-tabs-mode: nil
nxml-child-indent: 4
End:
-->
