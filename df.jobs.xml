<data-definition>
    <struct-type type-name='job_list_link'>
        <code-helper name='describe'>(describe-obj $.item)</code-helper>
        <pointer name='item' type-name='job'/>
        <pointer name='prev' type-name='job_list_link'/>
        <pointer name='next' type-name='job_list_link'/>
    </struct-type>

    <bitfield-type type-name='job_flags' base-type='uint16_t'>
        <flag-bit name='repeat'/>
        <flag-bit name='suspend'/>
        <flag-bit name='working' comment='not for food, or store in sp'/>
        <flag-bit name='fetching'
                  comment='Actually going out to bring; corresponds to items->is_fetching'/>
        <flag-bit name='special'
                  comment='Sleep/Drink/Eat/Clean; cannot be aborted via the ui'/>
        <flag-bit name='bringing'>
            <comment>
                When actually carrying non-last item to the workshop.
                If last, 'working' is used instead.
            </comment>
        </flag-bit>
        <flag-bit/>
        <flag-bit name='noise' count='2'/>
        <flag-bit name='by_manager'/>
        <flag-bit/>
        <flag-bit/>
        <flag-bit/>
        <flag-bit/>
    </bitfield-type>

    <struct-type type-name='job' key-field='id'>
        <int32_t name='id'/>
        <pointer name='list_link' type-name='job_list_link'/>
        <enum name='job_type' base-type='int16_t' type-name='job_type'/>

        <code-helper name='describe'>$.job_type</code-helper>

        <compound name='pos' type-name='coord'/>

        <int32_t name='completion_timer' comment='-1 per 10 frames'/>
        <int32_t/>
        <compound name='flags' type-name='job_flags'/>

        <enum base-type='int16_t' name='material' type-name='material_type'/>
        <int16_t name='matgloss' refers-to='(matgloss-target $$._parent.material $)'/>
        <int16_t/>
        <enum base-type='int16_t' name='item_type' type-name='item_type'/>
        <int16_t name='item_subtype'/>

        <compound name="item_category" type-name='item_category'/>
        <stl-string name='reaction_name'/>
        <int16_t name='recheck_cntdn' comment='for process_jobs; assumed same as current version'/>
        <int16_t name='wait_timer' comment='for units to leave build sites; to recheck stockpiles'/>

        <stl-vector name='items'>
            <pointer type-name='job_item_ref'/>
        </stl-vector>
        <stl-vector name='specific_refs'>
            <pointer type-name='specific_ref'/>
        </stl-vector>
        <stl-vector name='general_refs'>
            <pointer type-name='general_ref'/>
        </stl-vector>
    </struct-type>

    <struct-type type-name='job_item_ref'>
        <pointer name='item' type-name='item'/>

        <enum base-type='int32_t' name='role'>
            <enum-item/>
            <enum-item name='Reagent'/>
            <enum-item name='Hauled'/>
            <enum-item/>
            <enum-item/>
            <enum-item/>
            <enum-item name='TargetContainer'/>
        </enum>
        <int32_t name='is_fetching'
                 comment='0 immediately once taken to be brought'/>
    </struct-type>

    <bitfield-type type-name='job_item_flags1' base-type='uint32_t'>
        <flag-bit name='improvable'/>
        <flag-bit name="butcherable"/>
        <flag-bit name="millable"/>
        <flag-bit name="allow_buryable"/>
        <flag-bit name="unrotten"/>
        <flag-bit name="undisturbed"/>
        <flag-bit name="collected"/>
        <flag-bit name="sharpenable"/>

        <flag-bit name="murdered"/>
        <flag-bit name="distillable"/>
        <flag-bit name="empty"/>
        <flag-bit name="processable"/>
        <flag-bit name="bag"/>
        <flag-bit name="cookable"/>
        <flag-bit name="extract_bearing_plant"/>
        <flag-bit name="extract_bearing_fish"/>

        <flag-bit name="extract_bearing_vermin"/>
        <flag-bit name="processable_to_vial"/>
        <flag-bit name="processable_to_bag"/>
        <flag-bit name="processable_to_barrel"/>
        <flag-bit name="alchemical"/>
        <flag-bit name="tameable_vermin"/>
        <flag-bit name="nearby"/>
        <flag-bit name="sand_bearing"/>

        <flag-bit name="glass"/>
        <flag-bit name="milk"/>
        <flag-bit name="milkable"/>
        <flag-bit name='finished_goods'/>
        <flag-bit name='ammo'/>
        <flag-bit name='furniture'/>
        <flag-bit name='not_bin'/>
        <flag-bit name='lye_bearing'/>
    </bitfield-type>

    <bitfield-type type-name='job_item_flags2' base-type='uint32_t'>
        <flag-bit name="dye"/>
        <flag-bit name="dyeable"/>
        <flag-bit name="dyed"/>
        <flag-bit name="sewn_imageless"/>
        <flag-bit name="glass_making"/>
        <flag-bit name="screw"/>
        <flag-bit name="building_material"/>
        <flag-bit name="fire_safe"/>

        <flag-bit name="magma_safe"/>
        <flag-bit name="deep_material"/>
        <flag-bit name="melt_designated"/>
        <flag-bit name="non_economic"/>
        <flag-bit name="allow_melt_dump"/>
        <flag-bit name="allow_artifact"/>
    </bitfield-type>

    <struct-type type-name='job_item_filter'>
        <enum base-type='int32_t' name="item_type" type-name='item_type'/>
        <int32_t name='item_subtype' refers-to='(item-subtype-target $$._parent.item_type $)'/>
        <enum base-type='int16_t' name='material' type-name='material_type'/>
        <int16_t name='matgloss' refers-to='(matgloss-target $$._parent.material $)'/>

        <compound name="flags1" type-name='job_item_flags1'/>

        <pointer name="item_vector">
            <stl-vector>
                <pointer type-name='item'/>
            </stl-vector>
        </pointer>

        <bool name="use_matgloss"/>

        <compound name="flags2" type-name='job_item_flags2'/>
        <bool name="use_flags2"/>

        <stl-string name='reaction_class'/>
        <int16_t name="metal_ore" ref-target='matgloss_metal'/>

        <bool name="use_metal_ore"/>
        <bool name="use_reaction_class"/>

        <compound name='pos' type-name='coord'/>

        <pointer name="unit" type-name='unit'/>
        <pointer name="job" type-name='job'/>
        <pointer name="building" type-name='building'/>
    </struct-type>

    <struct-type type-name='manager_order'>
        <enum name='job_type' base-type='int16_t' type-name='job_type'/>
        <int16_t/>
        <int16_t name="item_subtype"/>
        <stl-string name='reaction_name'/>
        <enum base-type='int16_t' name='material' type-name='material_type'/>
        <int16_t name='matgloss' refers-to='(matgloss-target $$._parent.material $)'/>
        <compound name='item_cat' type-name='item_category'/>
        <int16_t name="amount_left"/>
        <int16_t name="amount_total"/>
        <int32_t name='approved'/>
    </struct-type>

    <struct-type type-name='manager_order_template'>
        <enum name='job_type' base-type='int16_t' type-name='job_type'/>
        <stl-string/>
        <int16_t name="item_subtype"/>
        <int16_t name='material' comment='or matgloss, depends on context'/>
        <int8_t/>
        <compound name="item_category" type-name='item_category'/>
    </struct-type>

    <struct-type type-name='mandate'>
        <pointer name='unit' type-name='unit'/>

        <int16_t name='mode' comment='0 export, 1 make, 2 guild jobs'/>

        <enum base-type='int16_t' name='item_type' type-name='item_type'/>
        <int16_t name='item_subtype' refers-to='(item-subtype-target $$._parent.item_type $)'/>

        <enum base-type='int16_t' name='material' type-name='material_type'/>
        <int16_t name='matgloss' refers-to='(matgloss-target $$._parent.material $)'/>

        <int16_t name='amount_total'/>
        <int16_t name='amount_remaining'/>

        <int32_t name='timeout_counter' comment='counts once per 10 frames'/>
        <int32_t name='timeout_limit' comment='once counter passes limit, mandate ends'/>

        <compound name='punishments'>
            <int16_t name='hammerstrikes'/>
            <int16_t name='prison'/>
            <int32_t name='beating'/>
        </compound>

        <uint8_t/>

        <int32_t name='flags'/>
    </struct-type>

    <enum-type type-name='guild_id'>
        <enum-item name='Miners'/>
        <enum-item name='Carpenters'/>
        <enum-item name='Masons'/>
        <enum-item name='Metalsmiths'/>
        <enum-item name='Jewelers'/>
        <enum-item name='Craftsmen'/>
    </enum-type>

    <struct-type type-name='unit_demand'>
        <int16_t name="unk_0"/>

        <enum base-type='int16_t' name='place'>
            <enum-item name='Office'/>
            <enum-item name='Bedroom'/>
            <enum-item name='DiningRoom'/>
            <enum-item name='Tomb'/>
        </enum>

        <enum base-type='int16_t' name='item_type' type-name='item_type'/>
        <int16_t name='item_subtype' refers-to='(item-subtype-target $$._parent.item_type $)'/>
        <enum base-type='int16_t' name='material' type-name='material_type'/>
        <int16_t name='matgloss' refers-to='(matgloss-target $$._parent.material $)'/>

        <int32_t name='timeout_counter' comment='counts once per 10 frames'/>
        <int32_t name='timeout_limit' comment='once counter passes limit, mandate ends'/>
    </struct-type>
</data-definition>

<!--
Local Variables:
indent-tabs-mode: nil
nxml-child-indent: 4
End:
-->
