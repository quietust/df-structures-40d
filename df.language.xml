<data-definition>
    <enum-type type-name='language_word_flags'>
        <enum-item name='FRONT_COMPOUND_NOUN_SING'/>
        <enum-item name='FRONT_COMPOUND_NOUN_PLUR'/>
        <enum-item name='FRONT_COMPOUND_ADJ'/>
        <enum-item name='FRONT_COMPOUND_PREFIX'/>
        <enum-item name='REAR_COMPOUND_NOUN_SING'/>
        <enum-item name='REAR_COMPOUND_NOUN_PLUR'/>
        <enum-item name='REAR_COMPOUND_ADJ'/>
        <enum-item name='THE_NOUN_SING'/>
        <enum-item name='THE_NOUN_PLUR'/>
        <enum-item name='THE_COMPOUND_NOUN_SING'/>
        <enum-item name='THE_COMPOUND_NOUN_PLUR'/>
        <enum-item name='THE_COMPOUND_ADJ'/>
        <enum-item name='THE_COMPOUND_PREFIX'/>
        <enum-item name='OF_NOUN_SING'/>
        <enum-item name='OF_NOUN_PLUR'/>
        <enum-item name='STANDARD_VERB'/>
    </enum-type>

    <enum-type type-name='part_of_speech'>
        <enum-item name='Noun'/>
        <enum-item name='NounPlural'/>
        <enum-item name='Adjective'/>
        <enum-item name='Prefix'/>
        <enum-item name='Verb'/>
        <enum-item name='Verb3rdPerson'/>
        <enum-item name='VerbPast'/>
        <enum-item name='VerbPassive'/>
        <enum-item name='VerbGerund'/>
    </enum-type>

    <enum-type type-name='sphere_type'>
        <enum-item name='AGRICULTURE'/>
        <enum-item name='ANIMALS'/>
        <enum-item name='ART'/>
        <enum-item name='BALANCE'/>
        <enum-item name='BEAUTY'/>
        <enum-item name='BIRTH'/>
        <enum-item name='BLIGHT'/>
        <enum-item name='BOUNDARIES'/>
        <enum-item name='CAVERNS'/>
        <enum-item name='CHAOS'/>
        <enum-item name='CHARITY'/>
        <enum-item name='CHILDREN'/>
        <enum-item name='COASTS'/>
        <enum-item name='CONSOLATION'/>
        <enum-item name='COURAGE'/>
        <enum-item name='CRAFTS'/>
        <enum-item name='CREATION'/>
        <enum-item name='DANCE'/>
        <enum-item name='DARKNESS'/>
        <enum-item name='DAWN'/>
        <enum-item name='DAY'/>
        <enum-item name='DEATH'/>
        <enum-item name='DEFORMITY'/>
        <enum-item name='DEPRAVITY'/>
        <enum-item name='DISCIPLINE'/>
        <enum-item name='DISEASE'/>
        <enum-item name='DREAMS'/>
        <enum-item name='DUSK'/>
        <enum-item name='DUTY'/>
        <enum-item name='EARTH'/>
        <enum-item name='FAMILY'/>
        <enum-item name='FAME'/>
        <enum-item name='FATE'/>
        <enum-item name='FERTILITY'/>
        <enum-item name='FESTIVALS'/>
        <enum-item name='FIRE'/>
        <enum-item name='FISH'/>
        <enum-item name='FISHING'/>
        <enum-item name='FOOD'/>
        <enum-item name='FORGIVENESS'/>
        <enum-item name='FORTRESSES'/>
        <enum-item name='FREEDOM'/>
        <enum-item name='GAMBLING'/>
        <enum-item name='GAMES'/>
        <enum-item name='GENEROSITY'/>
        <enum-item name='HAPPINESS'/>
        <enum-item name='HEALING'/>
        <enum-item name='HOSPITALITY'/>
        <enum-item name='HUNTING'/>
        <enum-item name='INSPIRATION'/>
        <enum-item name='JEALOUSY'/>
        <enum-item name='JEWELS'/>
        <enum-item name='JUSTICE'/>
        <enum-item name='LABOR'/>
        <enum-item name='LAKES'/>
        <enum-item name='LAWS'/>
        <enum-item name='LIES'/>
        <enum-item name='LIGHT'/>
        <enum-item name='LIGHTNING'/>
        <enum-item name='LONGEVITY'/>
        <enum-item name='LOVE'/>
        <enum-item name='LOYALTY'/>
        <enum-item name='LUCK'/>
        <enum-item name='LUST'/>
        <enum-item name='MARRIAGE'/>
        <enum-item name='MERCY'/>
        <enum-item name='METALS'/>
        <enum-item name='MINERALS'/>
        <enum-item name='MISERY'/>
        <enum-item name='MIST'/>
        <enum-item name='MOON'/>
        <enum-item name='MOUNTAINS'/>
        <enum-item name='MUCK'/>
        <enum-item name='MURDER'/>
        <enum-item name='MUSIC'/>
        <enum-item name='NATURE'/>
        <enum-item name='NIGHT'/>
        <enum-item name='NIGHTMARES'/>
        <enum-item name='OATHS'/>
        <enum-item name='OCEANS'/>
        <enum-item name='ORDER'/>
        <enum-item name='PAINTING'/>
        <enum-item name='PEACE'/>
        <enum-item name='PERSUASION'/>
        <enum-item name='PLANTS'/>
        <enum-item name='POETRY'/>
        <enum-item name='PREGNANCY'/>
        <enum-item name='RAIN'/>
        <enum-item name='RAINBOWS'/>
        <enum-item name='REBIRTH'/>
        <enum-item name='REVELRY'/>
        <enum-item name='REVENGE'/>
        <enum-item name='RIVERS'/>
        <enum-item name='RULERSHIP'/>
        <enum-item name='RUMORS'/>
        <enum-item name='SACRIFICE'/>
        <enum-item name='SALT'/>
        <enum-item name='SCHOLARSHIP'/>
        <enum-item name='SEASONS'/>
        <enum-item name='SILENCE'/>
        <enum-item name='SKY'/>
        <enum-item name='SONG'/>
        <enum-item name='SPEECH'/>
        <enum-item name='STARS'/>
        <enum-item name='STORMS'/>
        <enum-item name='STRENGTH'/>
        <enum-item name='SUICIDE'/>
        <enum-item name='SUN'/>
        <enum-item name='THEFT'/>
        <enum-item name='THRALLDOM'/>
        <enum-item name='THUNDER'/>
        <enum-item name='TORTURE'/>
        <enum-item name='TRADE'/>
        <enum-item name='TRAVELERS'/>
        <enum-item name='TREACHERY'/>
        <enum-item name='TREES'/>
        <enum-item name='TRICKERY'/>
        <enum-item name='TRUTH'/>
        <enum-item name='TWILIGHT'/>
        <enum-item name='VALOR'/>
        <enum-item name='VICTORY'/>
        <enum-item name='VOLCANOS'/>
        <enum-item name='WAR'/>
        <enum-item name='WATER'/>
        <enum-item name='WEALTH'/>
        <enum-item name='WEATHER'/>
        <enum-item name='WIND'/>
        <enum-item name='WISDOM'/>
        <enum-item name='WRITING'/>
        <enum-item name='YOUTH'/>
    </enum-type>

    <struct-type type-name='language_word'
                 instance-vector='$global.world.raws.language.words'>
        <stl-string name='word'/>

        <code-helper name='describe'>$.word</code-helper>

        <static-array type-name='stl-string' name='forms' count='9' index-enum='part_of_speech'/>

        <uint8_t name='adj_dist'/>

        <padding size='7' comment='looks like garbage'/>

        <df-flagarray name='flags' index-enum='language_word_flags'/>
    </struct-type>

    <struct-type type-name='language_translation'
                 instance-vector='$global.world.raws.language.translations'>
        <stl-string name='name'/>

        <code-helper name='describe'>$.name</code-helper>

        <stl-vector name="words_pre">
            <pointer type-name='stl-string'/>
        </stl-vector>
        <stl-vector name="trans_pre">
            <pointer type-name='stl-string'/>
        </stl-vector>

        <stl-vector name='words' index-refers-to='$global.world.raws.language.words[$]'>
            <pointer type-name='stl-string'/>
        </stl-vector>
    </struct-type>

    <struct-type type-name='language_symbol'
                 instance-vector='$global.world.raws.language.symbols'>
        <stl-string name='name'/>

        <stl-vector name="words_str">
            <pointer type-name='stl-string'/>
        </stl-vector>
        <stl-vector name='words'>
            <int32_t ref-target='language_word'/>
        </stl-vector>
    </struct-type>

    <struct-type type-name='language_name'>
        <stl-string name='first_name'/>
        <stl-string name='nickname'/>

        <static-array name='words' count='7'>
            <int32_t ref-target='language_word'/>
        </static-array>
        <static-array name='parts_of_speech' count='7'>
            <enum base-type='int16_t' type-name='part_of_speech'/>
        </static-array>

        <int32_t name='language' ref-target='language_translation'/>
        <int16_t name='unknown'/>

        <bool name='has_name'/>

        <code-helper name='describe'>
          (when $.has_name
            (let* ((nick $.nickname)
                   (lraw $global.world.raws.language)
                   (language $lraw.translations[$.language])
                   (english $lraw.words)
                   (fname $.first_name)
                   (lwords $language.words))
              (flet ((get-words (start end)
                       (loop for i from start to end
                         for word = $.words[i]
                         collect $lwords[word].value))
                     (get-english (start end)
                       (loop for i from start to end
                         for word = $.words[i] and ps = $.parts_of_speech[i]
                         collect $english[word].forms[ps])))
                (list
                 (fmt "Name:~:(~@[ ~A~]~@[ '~A'~]~@[ ~{~A~}~]~@[ ~{~A~}~]~@[ ~{~A~}~]~)"
                      (if (> (length fname) 0) fname)
                      (if (> (length nick) 0) nick)
                      (flatten (get-words 0 1))
                      (flatten (get-words 2 5))
                      (flatten (get-words 6 6)))
                 (fmt "aka~:(~@[ ~A~]~@[ ~{~A~}~]~@[ the ~A~]~@[ of ~{~A~}~]~)"
                      (if (> (length fname) 0) fname)
                      (flatten (get-english 0 1))
                      (when (>= $.words[5] 0)
                        (apply #'format nil "~@[~A ~]~@[~A ~]~@[~A-~]~A" (get-english 2 5)))
                      (flatten (get-english 6 6)))))))
        </code-helper>
    </struct-type>
</data-definition>

<!--
Local Variables:
indent-tabs-mode: nil
nxml-child-indent: 4
End:
-->
